{"version":3,"sources":["App.js","index.js"],"names":["VisualEditor","props","init","skin","content_style","max_height","autoresize_bottom_margin","body_class","forced_root_block","force_br_newlines","force_p_newlines","menubar","statusbar","branding","plugins","toolbar","help_tabs","name","title","items","type","html","App","window","onbeforeunload","className","Container","fluid","Row","as","Col","class","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTA2BA,SAASA,EAAaC,GACpB,OACE,cAAC,IAAD,aACEC,KAAM,CACJC,MAAM,EAINC,cAAc,oCACdC,WAAY,OACZC,yBAA0B,EAC1BC,WAAY,GACZC,kBAAmB,GACnBC,mBAAmB,EACnBC,kBAAkB,EAClBC,SAAS,EACTC,WAAW,EACXC,UAAU,EACVC,QAAS,CACP,aACA,UACA,WACA,QACA,OACA,QACA,gBACA,OACA,aACA,QACA,QAEFC,QACE,4KACFC,UAAW,CACT,CACEC,KAAM,iBACNC,MAAO,iBACPC,MAAO,CACL,CACEC,KAAM,YACNC,KAAK,slCAaX,YACA,cACA,aAGApB,IAiCKqB,MA5Bf,WAGE,OAFAC,OAAOC,eAAiB,kBAAM,GAG5B,qBAAKC,UAAU,WAAf,SACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,cAACC,EAAA,EAAD,UACE,cAAC9B,EAAD,QAGJ,cAAC4B,EAAA,EAAD,CAAKC,GAAG,SAASJ,UAAU,kBAA3B,SACE,cAACK,EAAA,EAAD,CAAKL,UAAU,yBAAf,SACE,oBAAIM,MAAM,cAAV,SACE,qBAAIA,MAAM,0CAAV,wBACc,IACZ,mBAAGC,KAAK,mCAAR,iDCrGhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.04725159.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Container,\n  Row,\n  Col,\n} from 'react-bootstrap'\n\nimport tinymce from 'tinymce/tinymce' // eslint-disable-line no-unused-vars\nimport 'tinymce/icons/default'\nimport 'tinymce/themes/silver'\nimport 'tinymce/plugins/autoresize'\nimport 'tinymce/plugins/autolink'\nimport 'tinymce/plugins/advlist'\nimport 'tinymce/plugins/lists'\nimport 'tinymce/plugins/link'\nimport 'tinymce/plugins/image'\nimport 'tinymce/plugins/searchreplace'\nimport 'tinymce/plugins/code'\nimport 'tinymce/plugins/fullscreen'\nimport 'tinymce/plugins/paste'\nimport 'tinymce/plugins/help'\nimport { Editor } from '@tinymce/tinymce-react'\n\nimport 'tinymce/skins/ui/oxide/skin.css'\nimport 'tinymce/skins/ui/oxide/content.inline.css'\nimport './App.css'\n\nfunction VisualEditor(props) {\n  return (\n    <Editor\n      init={{\n        skin: false,\n        //content_css:\n        //  'https://cdn.jcu.edu.au/cookbook/2.0/css/cookbook.min.css,https://cdn.jcu.edu.au/cookbook/2.0/css/fonts.min.css',\n        //content_css_cors: true,\n        content_style: `body { font-family: sans-serif; }`,\n        max_height: '90vh',\n        autoresize_bottom_margin: 0,\n        body_class: '',\n        forced_root_block: '',\n        force_br_newlines: false,\n        force_p_newlines: false,\n        menubar: false,\n        statusbar: false,\n        branding: false,\n        plugins: [\n          'autoresize',\n          'advlist',\n          'autolink',\n          'lists',\n          'link',\n          'image',\n          'searchreplace',\n          'code',\n          'fullscreen',\n          'paste',\n          'help',\n        ],\n        toolbar:\n          'undo redo searchreplace | formatselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link | removeformat | code | help',\n        help_tabs: [\n          {\n            name: 'languageeditor',\n            title: 'About This App',\n            items: [\n              {\n                type: 'htmlpanel',\n                html: `\n                <p>This editor is for modifying descriptions used in Research Data JCU.</p>\n                <p>This visual HTML editor is configured to work for:</p>\n                <ul>\n                  <li><strong>Labels</strong>: simple text-based messages which are typically short, single-line strings (allowed content are <strong>bold</strong>, <em>italic</em> and <a href=\"#\">linked text</a>), and</li>\n                  <li><strong>Rich HTML:</strong> more complicated messages that contain multiple paragraphs, styling, headings, bullets, numbering and more.</li>\n                </ul>\n                <p>Because this visual HTML editor needs to work for both types of message, hitting <kbd>Enter</kbd> or <kbd>Return</kbd> will insert a Line Break (<code>&lt;br&gt;</code>) rather than a new Paragraph (<code>&lt;p&gt;</code>). To create a new paragraph, use <kbd>Shift</kbd> + <kbd>Enter/Return</kbd> when entering text.</p>\n                <p>Other help documentation for this visual editor, including shortcuts, is available from the links in this Help panel.</p>\n                `,\n              },\n            ],\n          },\n          'shortcuts',\n          'keyboardnav',\n          'plugins',\n        ],\n      }}\n      {...props}\n    />\n  )\n}\n\nfunction App() {\n  window.onbeforeunload = () => true\n\n  return (\n    <div className=\"App my-1\">\n      <Container fluid>\n        <Row as=\"main\">\n          <Col>\n            <VisualEditor />\n          </Col>\n        </Row>\n        <Row as=\"footer\" className=\"pt-3 border-top\">\n          <Col className=\"text-center text-muted\">\n            <ul class=\"list-inline\">\n              <li class=\"list-inline-item mr-2 pr-2 border-right\">\n                Made by the{' '}\n                <a href=\"https://github.com/jcu-eresearch\">\n                  JCU eResearch Centre\n                </a>\n              </li>\n            </ul>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}